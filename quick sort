#include <stdio.h>

int partition(int a[], int l, int h) {
    int pivot = a[h];  // Use last element as pivot
    int i = l - 1;

    for (int j = l; j < h; j++) {
        if (a[j] < pivot) {
            i++;
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
        }
    }

    int temp = a[i + 1];
    a[i + 1] = a[h];
    a[h] = temp;

    return i + 1;
}

void quicksort(int a[], int l, int h) {
    if (l < h) {
        int p = partition(a, l, h);
        quicksort(a, l, p - 1);
        quicksort(a, p + 1, h);
    }
}

int main() {
    int n;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    int a[n];
    for (int i = 0; i < n; i++) {
        printf("Enter element %d: ", i + 1);
        scanf("%d", &a[i]);
    }

    quicksort(a, 0, n - 1);

    printf("Sorted elements are:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\nProgram executed successfully!\n");

    return 0;
}
